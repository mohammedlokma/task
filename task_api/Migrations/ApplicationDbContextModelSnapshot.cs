// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using task_api.Data;

#nullable disable

namespace task_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("task_api.Models.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dep1"
                        });
                });

            modelBuilder.Entity("task_api.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.ToTable("Employess");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1St",
                            DepartementId = 1,
                            Name = "mohamed",
                            PhoneNumber = "0123456789",
                            password = "123456",
                            username = "mohamed_123"
                        },
                        new
                        {
                            Id = 2,
                            Address = "1St",
                            DepartementId = 1,
                            Name = "hesham",
                            PhoneNumber = "0123456789",
                            password = "123456",
                            username = "hesham_123"
                        },
                        new
                        {
                            Id = 3,
                            Address = "1St",
                            DepartementId = 1,
                            Name = "ebrahim",
                            PhoneNumber = "0123456789",
                            password = "123456",
                            username = "ebrahim_123"
                        },
                        new
                        {
                            Id = 4,
                            Address = "1St",
                            DepartementId = 1,
                            Name = "mustafa",
                            PhoneNumber = "0123456789",
                            password = "123456",
                            username = "mustafa_123"
                        },
                        new
                        {
                            Id = 5,
                            Address = "1St",
                            DepartementId = 1,
                            Name = "ali",
                            PhoneNumber = "0123456789",
                            password = "123456",
                            username = "ali_123"
                        });
                });

            modelBuilder.Entity("task_api.Models.Employee", b =>
                {
                    b.HasOne("task_api.Models.Departement", "Departement")
                        .WithMany("Employees")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("task_api.Models.Departement", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
